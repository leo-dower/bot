from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

# Fun√ß√£o para responder ao comando /start
def start(update: Update, context: CallbackContext) -> None:
    update.message.reply_text(
        "üéâ Ol√°! Bem-vindo ao bot oficial da *Festa MC - 5 anos*! üéà\n"
        "Aqui est√£o os comandos dispon√≠veis:\n"
        "- /info: Detalhes sobre a festa\n"
        "- /local: Endere√ßo do evento\n"
        "- /horario: Hor√°rio da festa\n"
        "- /confirmar: Confirme sua presen√ßa."
    )

# Fun√ß√£o para fornecer detalhes sobre a festa
def info(update: Update, context: CallbackContext) -> None:
    update.message.reply_text(
        "üéä A festa ser√° no dia *10/12*, √†s *18h*, com o tema: *Noite de Gala*.\n"
        "Venha preparado(a) para uma noite inesquec√≠vel! üíÉüï∫"
    )

# Fun√ß√£o para fornecer o endere√ßo
def local(update: Update, context: CallbackContext) -> None:
    update.message.reply_text(
        "üìç *Endere√ßo do Evento:*\n"
        "Sal√£o de Festas XYZ\n"
        "Rua das Flores, 123, Centro, Cidade."
    )

# Fun√ß√£o para fornecer o hor√°rio
def horario(update: Update, context: CallbackContext) -> None:
    update.message.reply_text(
        "‚è∞ *Hor√°rio da Festa:*\n"
        "A festa come√ßa √†s 18h e termina √† meia-noite."
    )

# Fun√ß√£o para confirma√ß√£o de presen√ßa
def confirmar(update: Update, context: CallbackContext) -> None:
    update.message.reply_text(
        "üéâ Obrigado por confirmar sua presen√ßa! Por favor, envie seu nome completo para registrar a confirma√ß√£o. üòä"
    )

# Fun√ß√£o para mensagens n√£o reconhecidas
def unknown(update: Update, context: CallbackContext) -> None:
    update.message.reply_text("‚ùì Desculpe, n√£o entendi. Por favor, use um dos comandos dispon√≠veis.")

def main():
    # Substitu√≠do pelo token do seu bot fornecido pelo BotFather
    updater = Updater("7074333923:AAFpfxXmkyTvNJZxMS2ekvHOh275_X7M0gI")
    dispatcher = updater.dispatcher

    # Adicionando comandos
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CommandHandler("info", info))
    dispatcher.add_handler(CommandHandler("local", local))
    dispatcher.add_handler(CommandHandler("horario", horario))
    dispatcher.add_handler(CommandHandler("confirmar", confirmar))

    # Adicionando mensagens desconhecidas
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, unknown))

    # Inicia o bot
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()